# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy_and_build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Create SSH key
        run: |
              mkdir -p ~/.ssh/
              echo "$SSH_PRIVATE_KEY" > ../private.key
              sudo chmod 600 ../private.key
              echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
        shell: bash
        env:
           SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
           SSH_KNOWN_HOSTS: ${{secrets.SSH_KNOWN_HOSTS}}
           SSH_HOST: ${{secrets.SSH_HOST}}
      - name: Pre Deploy
        run: |
          scp -p -i ../private.key -o UserKnownHostsFile=~/.ssh/known_hosts ./.github/bin/deploy.sh root@$SSH_HOST:/deploy
          scp -p -i ../private.key -o UserKnownHostsFile=~/.ssh/known_hosts ./.github/bin/build.sh root@$SSH_HOST:/deploy
          scp -p -i ../private.key -o UserKnownHostsFile=~/.ssh/known_hosts ./.github/bin/start.sh root@$SSH_HOST:/deploy
          scp -p -i ../private.key -o UserKnownHostsFile=~/.ssh/known_hosts ./.github/bin/status.sh root@$SSH_HOST:/deploy
          scp -p -i ../private.key -o UserKnownHostsFile=~/.ssh/known_hosts ./.github/bin/post_deploy.sh root@$SSH_HOST:/deploy
        shell: bash
        env:
          SSH_HOST: ${{secrets.SSH_HOST}}
      - name: Check Pre Deploy
        run: |
          ssh -i ../private.key -o UserKnownHostsFile=~/.ssh/known_hosts -tt root@$SSH_HOST "test -e /deploy/deploy.sh"
          ssh -i ../private.key -o UserKnownHostsFile=~/.ssh/known_hosts -tt root@$SSH_HOST "test -e /deploy/build.sh"
          ssh -i ../private.key -o UserKnownHostsFile=~/.ssh/known_hosts -tt root@$SSH_HOST "test -e /deploy/start.sh"
          ssh -i ../private.key -o UserKnownHostsFile=~/.ssh/known_hosts -tt root@$SSH_HOST "test -e /deploy/status.sh"
          ssh -i ../private.key -o UserKnownHostsFile=~/.ssh/known_hosts -tt root@$SSH_HOST "test -e /deploy/post_deploy.sh"
        shell: bash
        env:
          SSH_HOST: ${{secrets.SSH_HOST}}
      - name: Deploy
        run: |
          ssh -i ../private.key -o UserKnownHostsFile=~/.ssh/known_hosts -tt root@$SSH_HOST "cd /deploy && chmod +x deploy.sh && source ./deploy.sh"
        shell: bash
        env:
          SSH_HOST: ${{secrets.SSH_HOST}}
      - name: Build
        run: |
          ssh -i ../private.key -o UserKnownHostsFile=~/.ssh/known_hosts -tt root@$SSH_HOST "cd /deploy && chmod +x env.sh && source ./env.sh && chmod +x build.sh && source ./build.sh"
        shell: bash
        env:
          SSH_HOST: ${{secrets.SSH_HOST}}
      - name: Start Application
        run: |
          ssh -i ../private.key -o UserKnownHostsFile=~/.ssh/known_hosts -tt root@$SSH_HOST "cd /deploy && chmod +x start.sh && source ./start.sh"
        shell: bash
        env:
          SSH_HOST: ${{secrets.SSH_HOST}}
      - name: Check Application Status
        run: |
          ssh -i ../private.key -o UserKnownHostsFile=~/.ssh/known_hosts -tt root@$SSH_HOST "cd /deploy && chmod +x status.sh && source ./status.sh"
        shell: bash
        env:
          SSH_HOST: ${{secrets.SSH_HOST}}
      - name: Post Deploy
        run: |
          ssh -i ../private.key -o UserKnownHostsFile=~/.ssh/known_hosts -tt root@$SSH_HOST "cd /deploy && chmod +x post_deploy.sh && source ./post_deploy.sh"
        shell: bash
        env:
          SSH_HOST: ${{secrets.SSH_HOST}}
       
